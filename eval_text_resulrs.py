# -*- coding: utf-8 -*-
"""eval-text-resulrs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Oru3FdzD3UR_bU3ozNUgfRpCfhzQXjDa
"""



!pip install datasets==2.21.0
!pip install transformers
!pip install sentence_transformers
!pip install evaluate
!pip install nltk rouge_score
!pip install sacrebleu
!pip install sacremoses
!pip install bert_score

import torch
from datasets import load_metric
import evaluate
from evaluate import load
import pandas as pd
import os
import numpy as np
import nltk
nltk.download('punkt_tab')


meteor = evaluate.load("meteor")
sari = load("sari")
rouge = load_metric("rouge",trust_remote_code=True)
bleu = load_metric("bleu",trust_remote_code=True)
sacrebleu = load_metric("sacrebleu",trust_remote_code=True)
bertscore = load("bertscore")

path1 = "/content/t5-small-pred-Con_Model-test.csv"
path2 = "/content/t5-small-pred-train-Con_Model-test.csv"

df1 = pd.read_csv(path1)
df2 = pd.read_csv(path2)

df1.head(2)

def rouge_score(pred,truth):


    FmeasureL = []
    FmeasureLs = []

    for i,j in zip(pred,truth):

        res = rouge.compute(predictions=[i], references=[j])


        FmeasureL.append(res["rougeL"].mid.fmeasure)

        FmeasureLs.append(res["rougeLsum"].mid.fmeasure)

    return (np.mean(FmeasureL),np.mean(FmeasureLs))


def bleu_score(pred,truth):

    Blue = []

    for i,j in zip(pred,truth):


        i = [i.split(" ")]
        j = [[j.split(" ")]]

        res = bleu.compute(predictions=i, references=j)['bleu']

        Blue.append(res)

    return np.mean(Blue)


def sacrebleu_score(pred,truth):

    Blue = []

    for i,j in zip(pred,truth):

        i = [i]
        j = [[j]]

        res = sacrebleu.compute(predictions=i, references=j)['score']
        Blue.append(res)

    return np.mean(Blue)


def meteor_score(pred,truth):

    Meteor = []

    for i,j in zip(pred,truth):

        i = [i]
        j = [j]

        res = meteor.compute(predictions=i, references=j)['meteor']
        Meteor.append(res)

    return np.mean(Meteor)


def sari_score(pred,truth):

    Sari = []

    for i,j in zip(pred,truth):

        i = [i]
        j = [j]

        res = sari.compute(sources = i , predictions=j, references=[j])['sari']
        Sari.append(res)

    return np.mean(Sari)


def bert_score(pred,truth):

    Bert_f1 = []

    for i,j in zip(pred,truth):

        i = [i]
        j = [j]

        res = bertscore.compute(predictions = i , references=j, model_type = "distilbert-base-uncased")


        Bert_f1.append(res['f1'][0])

    return np.mean(Bert_f1)

df1.head(1)

df2.head(1)

mis2 = list(df1["mis2"])
llama3 = list(df1["mis2"])
mis3 = list(df1["mis3"])
pred = list(df1["Pred"])
gt = list(df1["GT"])



###########################################################################

Blue = bleu_score(mis2,gt)

Sac_Blue = sacrebleu_score(mis2,gt)

Meteor = meteor_score(mis2,gt)

Sari = sari_score(mis2,gt)

Bert_f1 = bert_score(mis2,gt)

print("*"*100)
print("Mistral-2")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)




Blue = bleu_score(mis3,gt)

Sac_Blue = sacrebleu_score(mis3,gt)

Meteor = meteor_score(mis3,gt)

Sari = sari_score(mis3,gt)

Bert_f1 = bert_score(mis3,gt)

print("*"*100)
print("Mistral-3")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)





Blue = bleu_score(llama3,gt)

Sac_Blue = sacrebleu_score(llama3,gt)

Meteor = meteor_score(llama3,gt)

Sari = sari_score(llama3,gt)

Bert_f1 = bert_score(llama3,gt)

print("*"*100)
print("llama-3")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)



Blue = bleu_score(pred,gt)

Sac_Blue = sacrebleu_score(pred,gt)

Meteor = meteor_score(pred,gt)

Sari = sari_score(pred,gt)

Bert_f1 = bert_score(pred,gt)

print("*"*100)
print("pred")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)

len(Bert_f1)

mis2 = list(df2["mis2"])
llama3 = list(df2["mis2"])
mis3 = list(df2["mis3"])
pred = list(df2["Pred"])
gt = list(df2["GT"])



###########################################################################

Blue = bleu_score(mis2,gt)

Sac_Blue = sacrebleu_score(mis2,gt)

Meteor = meteor_score(mis2,gt)

Sari = sari_score(mis2,gt)

Bert_f1 = bert_score(mis2,gt)

print("*"*100)
print("Mistral-2")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)




Blue = bleu_score(mis3,gt)

Sac_Blue = sacrebleu_score(mis3,gt)

Meteor = meteor_score(mis3,gt)

Sari = sari_score(mis3,gt)

Bert_f1 = bert_score(mis3,gt)

print("*"*100)
print("Mistral-3")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)





Blue = bleu_score(llama3,gt)

Sac_Blue = sacrebleu_score(llama3,gt)

Meteor = meteor_score(llama3,gt)

Sari = sari_score(llama3,gt)

Bert_f1 = bert_score(llama3,gt)

print("*"*100)
print("llama-3")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)



Blue = bleu_score(pred,gt)

Sac_Blue = sacrebleu_score(pred,gt)

Meteor = meteor_score(pred,gt)

Sari = sari_score(pred,gt)

Bert_f1 = bert_score(pred,gt)

print("*"*100)
print("pred")
print()
print(f"Blue: {Blue}")
print(f"Sac_Blue: {Sac_Blue}")
print(f"Meteor: {Meteor}")
print(f"Sari: {Sari}")
print(f"Bert_f1: {Bert_f1}")
print()
print("*"*100)

